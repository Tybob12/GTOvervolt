pluginManagement {
    repositories {
        maven { url "https://maven.fabricmc.net/" }
        maven { url "https://maven.architectury.dev/" }
        maven { url "https://maven.minecraftforge.net/" }
        maven { url "https://maven.quiltmc.org/repository/release" }
        maven { url "https://maven.blamejared.com"}
        gradlePluginPortal()
    }
}

plugins {
    id("org.gradle.toolchains.foojay-resolver-convention") version "0.5.0"
}

dependencyResolutionManagement {
    repositories {
        mavenCentral()
    }
    versionCatalogs {

        // Minecraft Version
        def minecraftVersion = "1.20.1"

        // Mod Dependencies Versions
        def ae2Version = "15.4.6"
        def guideMeVersion = "20.1.11"
        def gtCeuVersion = "7.0.1"
        def kubejs_version="2001.6.5-build.14"
        def jei_version="15.20.0.106"
        def emiVersion = "1.1.22+1.20.1"
        def embeddiumVersion = "0.3.9-git.f603a93+mc1.20.1"
        def jadeVersion = "11.12.3+forge"

        // Forge
        def forgeVersion = "47.1.3"
        def registrateForgeVersion = "MC1.20-1.3.11"

        // Libs
        def quiltMappingsVersion = "23"  // https://lambdaurora.dev/tools/import_quilt.html
        def parchmentVersion = "2023.09.03" // https://parchmentmc.org/docs/getting-started
        def shadowVersion = "7.1.2"
        def architecturyPluginVersion = "3.4-SNAPSHOT"
        def architecturyLoomVersion = "1.4-SNAPSHOT"
        def vineFlowerVersion = "1.+"
        def macheteVersion = "1.+"
        def configurationVersion = "2.2.0"
        def ldLibVersion = "1.0.40.b"
        def mixinExtrasVersion = "0.2.0"
        def mixinVersion = "0.8.5"

        forge {
            version("forgeShortVersion", forgeVersion)
            def minecraftForge = version("minecraftForge", "${minecraftVersion}-${forgeVersion}")
            library("minecraftForge", "net.minecraftforge", "forge").versionRef(minecraftForge)

            def ldLib = version("ldlib", ldLibVersion)
            library("ldlib-forge", "com.lowdragmc.ldlib", "ldlib-forge-${minecraftVersion}").versionRef(ldLib)

            def registrate = version("registrate", registrateForgeVersion)
            library("registrate", "com.tterrag.registrate", "Registrate").versionRef(registrate)

            def gtceu = version("gtceu", gtCeuVersion)
            library("gtceu-forge", "com.gregtechceu.gtceu", "gtceu-${minecraftVersion}").versionRef(gtceu)

            def configuration = version("configuration", configurationVersion)
            library("configuration", "dev.toma.configuration", "configuration-forge-1.20.1").versionRef(configuration)

            def mixinExtras = version("mixinExtras", mixinExtrasVersion)
            library("mixinExtras-common", "io.github.llamalad7", "mixinextras-common").versionRef(mixinExtras)
            library("mixinExtras-forge", "io.github.llamalad7", "mixinextras-forge").versionRef(mixinExtras)

            def ae2 = version("ae2", ae2Version)
            library("ae2", "appeng", "appliedenergistics2-forge").versionRef(ae2)

            def guideMe = version("guideMe", guideMeVersion)
            library("guideme", "org.appliedenergistics", "guideme").versionRef(guideMe)

            def emi = version("emiVersion", emiVersion)
            library("emi", "dev.emi", "emi-forge").versionRef(emi)

            def embeddium = version("embeddiumVersion", embeddiumVersion)
            library("embeddium", "org.embeddedt", "embeddium-1.20.1").versionRef(embeddium)

            def jade = version("jadeVersion", jadeVersion)
            library("jade", "maven.modrinth", "jade").versionRef(jade)
        }

        libs {
            version("quiltMappings", quiltMappingsVersion)
            version("parchment", parchmentVersion)

            def minecraft = version("minecraft", minecraftVersion)
            library("minecraft", "com.mojang", "minecraft").versionRef(minecraft)

            def mixin = version("mixin", mixinVersion)
            library("mixin", "org.spongepowered", "mixin").versionRef(mixin)

            def shadow = version("shadow", shadowVersion)
            plugin("shadow", "com.github.johnrengelman.shadow").versionRef(shadow)

            def architecturyPlugin = version("architectury", architecturyPluginVersion)
            plugin("architectury", "architectury-plugin").versionRef(architecturyPlugin)

            def architecturyLoom = version("architectury-loom", architecturyLoomVersion)
            plugin("architectury-loom", "dev.architectury.loom").versionRef(architecturyLoom)

            def vineFlower = version("vineFlower", vineFlowerVersion)
            plugin("vineFlower", "io.github.juuxel.loom-vineflower").versionRef(vineFlower)

            def machete = version("machete", macheteVersion)
            plugin("machete", "io.github.p03w.machete").versionRef(machete)
        }
    }
}

rootProject.name = "${mod_id}"